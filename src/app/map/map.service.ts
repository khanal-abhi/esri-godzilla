import { Injectable, ElementRef, NgZone, OnInit, OnDestroy } from '@angular/core';
import { Subscription } from 'rxjs/Subscription';
import { Observable } from 'rxjs/Observable';
import { BehaviorSubject } from 'rxjs/BehaviorSubject';
import 'rxjs/add/observable/fromPromise';
import { loadModules } from 'esri-loader';
import { EsriModules } from './map.data';
import * as mapData from './map.data';
import { lang } from 'dojo/_base/lang';
import * as on from 'dojo/on';
import * as gfx from 'dojox/gfx';
import * as domConstruct from 'dojo/dom-construct';
import * as query from 'dojo/query';
import * as domAttr from 'dojo/dom-attr';
import * as domStyle from 'dojo/dom-style';

export interface Basemap {
  title: string;
  url: any;
  attribution: string;
  image: string;
  maxZoom: number;
  maxNativeZoom: number;
  basemap: any;
}

@Injectable()
export class MapService {

  private _isLoaded: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);
  private _esriModules: EsriModules = null;
  private _loadEsriModulesSubscription: Subscription;

  constructor(private _zone: NgZone) {
    // load esri modules from arcgis js api
    this._loadEsriModulesSubscription = Observable.fromPromise(
      loadModules(mapData.esriLoaderStr, mapData.esriLoaderOptions)
        .catch((error) => {
          console.error(error);
        })).subscribe((loaderResponse: any) => {
          this._initEsriModules(loaderResponse);
        });
  }

  public whenLoaded(): Promise<boolean> {
    return new Promise<boolean>((resolve) => {
      if (this._isLoaded.value === true) {
        resolve(true);
      } else {
        const sub = this._isLoaded.subscribe(() => {
          if (this._isLoaded.value === true) {
            resolve(true);
            sub.unsubscribe();
          }
        });
      }
    });
  }

  private _initEsriModules(loaderResponse: any) {
    this._esriModules = this._createEsriModules(loaderResponse);
    this._isLoaded.next(true);
  }

  private _createEsriModules(loaderResponse: any): EsriModules {
    return {
      Map: loaderResponse.shift(),
      MapView: loaderResponse.shift(),
      geometryEngine: loaderResponse.shift(),
      Point: loaderResponse.shift(),
      Circle: loaderResponse.shift(),
      Multipoint: loaderResponse.shift(),
      Polyline: loaderResponse.shift(),
      webMercatorUtils: loaderResponse.shift(),
      Graphic: loaderResponse.shift(),
      Basemap: loaderResponse.shift(),
      WebTileLayer: loaderResponse.shift(),
      GraphicsLayer: loaderResponse.shift(),
      RouteTask: loaderResponse.shift(),
      RouteParameters: loaderResponse.shift(),
      FeatureSet: loaderResponse.shift(),
      Color: loaderResponse.shift(),
      VectorTileLayer: loaderResponse.shift(),
      SimpleLineSymbol: loaderResponse.shift(),
      SimpleMarkerSymbol: loaderResponse.shift(),
      ScreenPoint: loaderResponse.shift()
    };
  }

  public createMapView(rootEl: ElementRef): __esri.MapView {
    this.checkIsReady();
    let output: __esri.MapView;
    output = new this._esriModules.MapView({
      container: rootEl.nativeElement,
      center: [-29.88, 21.86133],
      zoom: 3,
      map: new this._esriModules.Map({
        basemap: 'streets',
      }
      )
    });


    output.when(() => {
      // let's have some fun!
      console.log('loading map features');
      const linepath = [
        [-29.88231249999835, 21.861337104185896],
        [-29.706531249998385, 23.64436466438422],
        [-26.89403124999913, 29.152009189365007],
        [-25.4877812499995, 31.57838706044446],
        [-22.85106250000021, 34.08891708698886],
        [-19.862781250001014, 36.66827922896022],
        [-18.104968750001476, 37.787943753057206],
        [-14.765125000002355, 39.300164419151855],
        [-12.655750000002914, 39.97698664383719],
        [-10.370593750003529, 40.64717142579546],
        [-8.085437500004144, 41.178522893330914],
        [-4.218250000005169, 41.574231022027256],
        [0.7036249999935258, 41.836698107532534],
        [4.746593749992446, 41.836698107532534],
        [9.316906249991233, 41.836698107532534],
        [12.48096874999041, 41.836698107532534],
        [12.8325312499903, 41.836698107532534]
      ];

      const sls = {
        type: 'simple-line',
        color: '#486CFF',
        join: 'round',
        style: 'dash',
        width: 4,
        cap: 'round'
      };
      // new this._esriModules.SimpleLineSymbol(
      //   this._esriModules.SimpleLineSymbol.STYLE_DASH,
      //   new this._esriModules.Color([255, 0, 0]),
      //   3
      // );
      console.log('creating poly line');
      const pl = new this._esriModules.Polyline({ 'paths': [linepath], 'spatialReference': { 'wkid': 4326 } });
      const zillaPath = new this._esriModules.Graphic(pl, sls);

      console.log('creating godzilla');
      const markerSymbol = {
        type: 'simple-marker',
        path: 'm 226.25969,776.42438 c -1.066,-1.2449 -2.95,-2 -4.9902,-2 -1.8842,0 -3.2778,-0.5106 -3.2778,-1.201 0,-1.8195 10.6974,-11.8399 17.7601,-16.6361 6.7205,-4.5638 19.7827,-11.1629 22.0957,-11.1629 3.4933,0 9.1442,-2.4152 9.1444,-3.9083 2e-4,-0.8755 -1.0867,-5.4167 -2.4152,-10.0917 -5.8345,-20.5317 -12.9839,-45.8639 -14.1114,-50 -2.7292,-10.012 1.4939,-22.9723 12.5451,-38.5 8.1195,-11.4086 38.7588,-42.2615 53.4813,-53.8543 15.6385,-12.314 18.6188,-13.6485 30.4463,-13.6339 10.996,0.014 17.2462,1.4379 26.1959,5.9693 13.988,7.0822 20.8318,15.812 20.8484,26.5937 0.014,9.272 -5.4539,23.9071 -13.1563,35.2116 -1.7664,2.5925 -9.8552,11.4636 -17.9751,19.7136 -20.8594,21.1934 -33.2181,35.5295 -36.7883,42.6741 l -3.0709,6.1453 0,30.7752 c 0,17.576 -0.4183,31.8753 -0.9752,33.3403 l -0.9753,2.5651 -46.5345,0 c -45.2971,0 -46.5801,-0.053 -48.247,-2 z m 107.732,-20.5248 c 0,-0.8386 -1.125,-1.9525 -2.5,-2.4752 -1.375,-0.5228 -2.5,-1.3713 -2.5,-1.8855 0,-1.5326 7.4542,-10.4915 11.8851,-14.2842 2.2672,-1.9407 7.7206,-5.4652 12.1186,-7.8323 4.398,-2.3671 7.9963,-4.7317 7.9963,-5.2545 0,-0.5229 -1.1833,-4.7459 -2.6295,-9.3844 -1.4462,-4.6384 -2.3388,-8.7242 -1.9836,-9.0794 0.3552,-0.3552 1.876,0.3493 3.3795,1.5655 10.2717,8.3091 21.7418,14.0065 37.159,18.4575 4.5453,1.3122 8.6646,3.0184 9.154,3.7916 0.4895,0.7731 0.8969,7.095 0.9053,14.0487 0.013,10.6156 -0.2383,12.7403 -1.5665,13.25 -0.87,0.3338 -17.295,0.607 -36.5,0.607 -30.6236,0 -34.9182,-0.1876 -34.9182,-1.5248 z m 162,-17.503 c -24.1126,-2.2392 -48.2725,-6.1307 -64.938,-10.4597 -14.3789,-3.735 -37.7408,-12.2494 -48.1004,-17.5303 -13.9369,-7.1046 -30.9858,-19.6994 -30.9358,-22.8537 0.014,-0.8957 2.2227,-3.1183 4.9078,-4.9391 5.3838,-3.6509 22.629,-20.9829 25.5708,-25.6996 1.0257,-1.6444 2.6919,-3.9296 3.7028,-5.0783 1.0109,-1.1487 4.4565,-7.2512 7.657,-13.5612 5.2666,-10.3835 5.9875,-12.5873 7.5937,-23.2128 1.6966,-11.2233 1.697,-11.9468 0.01,-16.4388 -2.2494,-5.9883 -4.2511,-8.8231 -10.7322,-15.1987 -10.5355,-10.3639 -28.1561,-17.4923 -43.2354,-17.4907 -11.4656,10e-4 -17.0681,1.9074 -28.3585,9.6482 -11.2088,7.685 -15.6072,11.1921 -27.2001,21.6882 -12.4028,11.2291 -16.0423,14.1543 -17.6114,14.1543 -1.8122,0 -3.893,-3.4973 -7.8379,-13.1735 -7.1543,-17.5481 -9.6418,-42.9489 -5.4549,-55.7028 l 2.0375,-6.2065 -2.5212,-5.7086 c -5.2889,-11.9752 -6.6074,-21.848 -4.5107,-33.775 2.1028,-11.9612 3.3223,-12.9801 11.909,-9.9505 6.1569,2.1723 18.6816,2.9773 24.0479,1.5457 18.935,-5.0514 31.5254,-17.7276 35.2514,-35.4916 0.9939,-4.7385 0.9005,-7.0039 -0.5912,-14.3326 -2.9368,-14.4291 -9.0587,-22.3937 -19.2513,-25.0465 -13.2404,-3.4459 -17.3178,-3.645 -38.9089,-1.9005 l -3,0.2424 0.3354,-6.1346 c 0.591,-10.8106 -2.082,-13.4031 -15.3354,-14.8735 -7.3121,-0.8112 -16.4503,-2.8598 -19.1124,-4.2845 -1.0817,-0.5789 -2.6032,-2.2417 -3.381,-3.6951 -1.7859,-3.3371 -0.4135,-5.8806 3.4187,-6.3359 3.4232,-0.4068 17.5747,-13.589 17.5747,-16.3709 0,-1.3866 -0.4994,-1.7865 -1.75,-1.4013 -3.0512,0.9398 -14.5844,4.2792 -19.0744,5.5229 -2.3785,0.6588 -5.7077,2.5197 -7.3984,4.1353 -1.6906,1.6157 -3.6008,2.9376 -4.2449,2.9376 -1.9506,0 -11.8807,-7.8119 -14.2823,-11.2358 -2.7494,-3.9197 -3.0651,-12.6866 -0.6722,-18.6669 1.6031,-4.0068 3.8355,-5.5605 11.4883,-7.9961 1.9614,-0.6242 5.3607,-2.8149 7.5541,-4.8681 6.0123,-5.6281 17.1709,-14.5525 20.172,-16.133 5.562,-2.9293 12.876,-4.0765 26.0635,-4.0883 14.4273,-0.013 22.0126,1.3675 30.1357,5.4838 5.8081,2.9432 6.0807,3.283 13.5026,16.8323 8.3373,15.2206 18.3656,32.3799 37.5473,64.2468 15.4764,25.7112 18.9291,31.3793 31.6304,51.9253 3.06,4.95 6.9023,11.25 8.5385,14 1.6362,2.75 6.2422,10.175 10.2356,16.5 3.9934,6.325 11.2643,17.9329 16.1575,25.7953 21.7113,34.8859 56.3116,88.1552 66.3128,102.0926 27.6759,38.5681 32.8588,43.4761 50.1219,47.4621 17.1355,3.9567 25.3721,3.0917 41.5899,-4.3675 21.6972,-9.9794 33.0346,-33.7286 27.9113,-58.4675 -1.8661,-9.0108 -3.8768,-12.1342 -17.1483,-26.6394 -4.34,-4.7434 -8.5659,-9.5317 -9.3909,-10.6407 -1.8487,-2.4851 -21.4528,-24.0367 -27.6319,-30.377 -2.4883,-2.5532 -5.5015,-5.9949 -6.6961,-7.6484 -1.1946,-1.6534 -5.322,-6.569 -9.172,-10.9236 -3.85,-4.3545 -8.575,-9.8733 -10.5,-12.2639 -1.925,-2.3907 -5.7729,-7.0861 -8.5509,-10.4343 -13.5598,-16.3431 -20.4029,-27.3434 -24.6241,-39.5832 -3.6711,-10.6448 -6.825,-26.7045 -6.825,-34.7528 0,-14.2879 4.8125,-31.6819 12.1454,-43.8977 4.0548,-6.7549 15.0489,-18.886 18.939,-20.8977 5.0782,-2.626 12.9156,-1.3343 12.9156,2.1288 0,0.8331 -2.5322,10.1547 -5.6271,20.7148 -9.5696,32.6523 -9.9923,36.5339 -5.4446,49.988 4.1444,12.2608 8.3915,19.696 16.6002,29.0615 7.9188,9.0348 28.4711,29.0575 34.2551,33.3725 2.044,1.5249 7.3316,5.9238 11.7502,9.7753 4.4186,3.8515 9.8186,8.4468 12,10.2118 2.1814,1.765 7.4015,6.04 11.6001,9.5 12.7846,10.5355 17.2655,13.9775 19.6161,15.0681 1.2375,0.5741 2.25,1.3833 2.25,1.7982 0,0.4149 2.2809,2.4286 5.0685,4.475 4.99044,3.6632 8.72294,8.0054 18.26244,21.245 7.2086,10.0048 10.6005,17.3892 13.7922,30.0266 6.6758,26.4336 1.9309,53.4113 -15.5972,88.6781 -11.6634,23.4669 -24.94944,40.0747 -40.06684,50.0843 -14.3758,9.5186 -37.5109,15.6139 -77.4591,20.4078 -8.4469,1.0137 -17.9406,1.0072 -29,-0.02 z m -246.0398,-408.4242 c 0.6691,-0.8063 0.9078,-2.3886 0.5366,-3.5582 -0.9776,-3.0802 -5.8699,-2.3873 -6.3343,0.8971 -0.5202,3.6793 3.4429,5.4983 5.7977,2.6611 z m 243.7898,275.7777 c -5.6722,-7.8206 -7.749,-11.5085 -7.7463,-13.7556 0.01,-6.6605 7.1386,-13.3567 12.88,-12.0957 2.0401,0.4481 3.232,0.053 4.677,-1.5513 3.2951,-3.6576 5.8508,-4.0569 11.347,-1.7727 4.559,1.8946 5.0108,2.3824 5.2886,5.7106 0.2534,3.0369 0.7173,3.688 2.8037,3.9355 3.1389,0.3723 8.0002,2.2408 7.9995,3.0748 -3e-4,0.3458 -0.9003,2.996 -2,5.8894 -1.0997,2.8934 -1.9995,6.1115 -1.9995,7.1512 0,1.0859 -1.4313,2.735 -3.3629,3.8747 -1.8496,1.0913 -4.2121,3.7232 -5.25,5.8487 l -1.8871,3.8647 -7.5,0.2556 -7.5,0.2555 -7.75,-10.6854 z m -20.9657,-37.0998 c -10.9971,-8.7394 -23.9208,-28.6552 -24.1451,-37.2081 -0.069,-2.6363 0.7133,-4.7912 2.6722,-7.3594 3.9794,-5.2173 6.075,-6.111 9.879,-4.2133 1.7143,0.8552 3.2115,1.5549 3.3272,1.5549 0.1157,0 1.4764,-1.8269 3.0238,-4.0598 3.9253,-5.6642 6.3345,-6.8117 8.5519,-4.0733 2.0828,2.5721 4.1568,2.6891 7.9498,0.4486 2.3231,-1.3723 3.3247,-1.469 5.4043,-0.5215 2.0188,0.9199 2.5526,1.8845 2.5526,4.6131 0,4.9189 2.1898,6.7461 7.1371,5.955 l 3.9935,-0.6386 -0.6666,5.8916 c -0.5882,5.1997 -0.4197,6.115 1.4347,7.7932 1.1557,1.0459 2.1013,2.5476 2.1013,3.3372 0,2.898 -9.2689,12.3245 -14.7643,15.0153 l -5.4372,2.6624 0.6378,4.808 0.6378,4.8081 -4.62,1.9803 c -5.807,2.4892 -5.5079,2.5138 -9.6698,-0.7937 z m -35.5371,-52.7654 c -1.2089,-0.8467 -7.0465,-8.7945 -12.9725,-17.6618 -10.3657,-15.5104 -10.7687,-16.3146 -10.6156,-21.1834 0.088,-2.7835 0.9494,-7.6707 1.9151,-10.8605 1.3827,-4.5665 2.268,-5.9281 4.1641,-6.404 1.3245,-0.3324 2.9152,-0.097 3.5349,0.5224 2.9668,2.9668 9.0313,0.6684 15.6192,-5.9195 3.5725,-3.5725 4.1681,-3.6152 7.8003,-0.5588 2.8373,2.3874 2.8571,2.3891 6.3268,0.5419 5.7119,-3.041 8.1286,-2.345 8.3736,2.4113 0.1087,2.1115 2.0661,3.4518 8.9603,6.136 l 3.8534,1.5002 -2.1034,3.565 c -2.8142,4.7697 -2.6628,6.2783 1.0107,10.0684 l 3.1141,3.2129 -3.1909,1.6501 c -3.0016,1.5522 -3.151,1.887 -2.5166,5.642 1.1098,6.5685 -0.6638,9.201 -8.5437,12.6815 -6.8763,3.0372 -6.8769,3.0378 -6.3121,6.5183 0.6873,4.2353 -1.4028,5.9372 -10.061,8.1924 -6.8425,1.7823 -5.7242,1.7896 -8.3567,-0.054 z M 82.262089,483.86718 c -3.4803,-1.5431 -4.0959,-3.037 -4.5091,-10.9428 -0.2889,-5.5284 0.2035,-5.1099 -13.0113,-11.0574 -3.1625,-1.4233 -5.75,-3.0482 -5.75,-3.6109 0,-1.972 4.1867,-6.8769 7.2,-8.4351 2.7853,-1.4404 3.6644,-1.4268 10.4067,0.161 l 7.3645,1.7343 3.8454,-2.6648 c 2.115,-1.4657 5.111,-3.9859 6.6579,-5.6005 l 2.8125,-2.9357 -3.1435,-3.5802 c -3.6025,-4.1031 -4.2216,-9.5266 -1.5266,-13.3742 1.0773,-1.538 1.4328,-3.4426 1.0654,-5.707 -0.7196,-4.4343 0.6858,-9.1451 3.6857,-12.3542 1.324,-1.4165 2.747701,-3.7003 3.163801,-5.0753 1.7884,-5.9102 3.2906,-7 9.649,-7 3.2729,0 6.8014,-0.4553 7.8412,-1.0118 2.0098,-1.0756 3.9632,-6.6372 3.9724,-11.3102 l 0.01,-2.8219 -5.75,0.6897 c -3.1625,0.3794 -9.8,1.3118 -14.75,2.072 -21.982201,3.3761 -32.738401,4.5437 -33.631201,3.651 -1.3542,-1.3543 1.6942,-12.1748 4.1735,-14.8139 3.8263,-4.0729 11.6704,-7.4415 26.5967,-11.4219 8.173601,-2.1796 19.132501,-5.4465 24.353301,-7.2597 l 9.4922,-3.2969 1.6785,-4.9882 c 1.4691,-4.3658 4.1593,-13.8921 9.4404,-33.4295 2.2371,-8.2761 3.555,-10.3892 7.1151,-11.4085 4.5738,-1.3095 8.2849,1.2129 8.2724,5.6228 -0.01,1.7748 -2.0434,11.102 -4.5297,20.727 -2.4863,9.625 -5.0515,19.8692 -5.7005,22.765 l -1.1799,5.2651 3.8716,3.2349 c 2.1294,1.7792 4.6601,3.685 5.6237,4.235 3.5837,2.0453 21.1859,18.1991 25.9141,23.7817 3.6585,4.3197 5.066,6.9099 5.5658,10.2433 0.8044,5.3638 -0.1843,11.4819 -1.8513,11.4569 -0.6626,-0.01 -3.4547,-1.291 -6.2047,-2.8467 -2.75,-1.5557 -12.2,-6.9209 -21,-11.9227 -12.264,-6.9706 -16.2672,-8.816 -17.1443,-7.9033 -1.0917,1.136 -4.3557,11.3109 -4.3557,13.5778 0,0.5936 2.2542,2.2216 5.0094,3.6177 2.9942,1.5173 6.2366,4.2395 8.0602,6.7669 5.62,7.7893 6.3643,8.68 7.901,9.456 0.8412,0.4248 17.5044,1.0592 37.0294,1.4097 50.2015,0.9012 96.6675,2.6468 102.2992,3.8432 2.6396,0.5607 6.0429,1.0195 7.5629,1.0195 5.0736,0 10.4344,7.7439 12.3398,17.8255 1.563,8.2697 1.3859,10.2109 -1.5086,16.5333 -5.0249,10.9759 -21.041,23.9823 -29.43,23.8996 -6.8999,-0.068 -15.1153,-1.5362 -23.5786,-4.2137 -5.0516,-1.5982 -16.1597,-4.3099 -24.6847,-6.0259 -23.2819,-4.6864 -53.7697,-11.5641 -79.5799,-17.9523 -22.2107,-5.4974 -23.2275,-5.6574 -27,-4.2497 -2.4019,0.8963 -7.1986,1.4286 -12.3853,1.3744 -6.7074,-0.07 -9.1096,0.3099 -11.5687,1.8297 -4.9329,3.0487 -14.306901,13.4495 -14.962201,16.6012 -0.3292,1.5828 -1.3647,6.0279 -2.3012,9.8779 -1.8931,7.7829 -3.0483,8.5515 -8.9323,5.9428 z m 325.729601,-29.0896 c -8.4814,-2.7645 -8.9679,-3.273 -22.2139,-23.2132 -7.4889,-11.2736 -12.6629,-20.0187 -12.3408,-20.8581 0.3051,-0.795 0.5547,-2.4525 0.5547,-3.6834 0,-2.3197 8.5979,-14.2344 11.4059,-15.8058 1.1616,-0.6501 2.24,-0.1989 3.9599,1.657 3.5173,3.7952 5.8886,3.2253 11.0286,-2.6504 l 4.5494,-5.2007 2.3426,2.2007 c 2.9314,2.7539 4.6482,2.7618 9.2565,0.043 2.8658,-1.6909 4.2308,-1.9558 6.3072,-1.2241 2.2654,0.7982 2.6499,1.5104 2.6499,4.9078 l 0,3.9741 6.1708,2 c 3.3939,1.1 6.482,2.3131 6.8624,2.6958 0.3805,0.3827 -0.031,2.8156 -0.9133,5.4065 -1.8003,5.2835 -1.328,6.4476 3.4133,8.4114 3.972,1.6453 3.7429,3.0279 -1.1539,6.9631 -4.1056,3.2993 -4.1185,3.3311 -3.4957,8.6299 0.7252,6.1701 0.4674,6.4218 -8.6454,8.4405 -7.3671,1.632 -8.1889,2.6299 -6.1615,7.4822 1.1895,2.8468 1.3298,4.3804 0.5561,6.0785 -1.4451,3.1715 -9.414,5.2834 -14.1328,3.7453 z m -50.4625,-69.4096 c -5.6095,-2.7983 -9.0683,-6.4254 -11.4857,-12.0449 l -2.0934,-4.8661 3.5334,-7.0163 c 3.7747,-7.4957 4.3249,-7.803 11.4267,-6.3826 2.1216,0.4243 3.6639,1.5918 4.668,3.5336 0.9821,1.8992 2.5497,3.1099 4.5425,3.5085 3.7937,0.7587 4.3874,2.2293 2.819,6.9819 -1.1346,3.4376 -1.061,3.8553 0.9088,5.1632 3.9533,2.6249 1.9503,8.6761 -3.8678,11.6848 -3.7538,1.9411 -5.6364,1.8399 -10.4515,-0.5621 z',
        color: '#000000',
        size: '50px'
      };

      console.log('creating layers');
      const gLayerGodzilla = new this._esriModules.GraphicsLayer({
        'id': 'Godzilla'
      });
      const gLayerGodzillPath = new this._esriModules.GraphicsLayer({
        'id': 'GodzillaPath'
      });
      console.log('adding layers');
      output.map.layers.add(gLayerGodzillPath, 1);
      output.map.layers.add(gLayerGodzilla, 2);

      gLayerGodzillPath.add(zillaPath);

      let counter = 0;

      const zillaMove = () => {
        gLayerGodzilla.removeAll();
        const p1 = new this._esriModules.Point(linepath[counter]);
        const p2 = new this._esriModules.Point(linepath[counter + 1]);
        const pt1Graphic = new this._esriModules.Graphic(p1, markerSymbol);

        gLayerGodzilla.add(pt1Graphic);

        const sp1 = output.toScreen(p1);
        const sp2 = output.toScreen(p2);

        const mp1 = output.toMap(new this._esriModules.ScreenPoint(sp2.x, sp2.y));

        counter++;
        // gfx.animateTransform({
        //   duration: 1200,
        //   shape: shape,
        //   transform: [{
        //     name: 'translate',
        //     start: [0, 0],
        //     end: [sp2.x - sp1.x, sp2.y - sp1.y]
        //   },
        //   { name: 'original' }
        //   ],
        //   onEnd: lang.hitch(this, function () {
        //     pt1Graphic.setGeometry(mp1);
        //   })
        // }).play();
        // counter++;
        // if (counter >= linepath.length - 1) {
        //   clearInterval(myInterval);
        // }

      };

      const myInterval = setInterval(zillaMove, 3000);
      // 

    });

    return output;
  }

  private checkIsReady() {
    if (this._isLoaded.value === false) {
      throw new Error('attempted to call map.service before it has been initialized');
    }
  }

}
